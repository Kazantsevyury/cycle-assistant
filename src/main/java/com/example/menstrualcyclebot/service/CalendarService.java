package com.example.menstrualcyclebot.service;

import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

public class CalendarService {

    public InlineKeyboardMarkup getCalendar(int year, int month) {
        InlineKeyboardMarkup inlineKeyboardMarkup = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();

        // –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ - –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏
        List<InlineKeyboardButton> weekDaysRow = new ArrayList<>();
        weekDaysRow.add(createButton("–ü–Ω"));
        weekDaysRow.add(createButton("–í—Ç"));
        weekDaysRow.add(createButton("–°—Ä"));
        weekDaysRow.add(createButton("–ß—Ç"));
        weekDaysRow.add(createButton("–ü—Ç"));
        weekDaysRow.add(createButton("–°–±"));
        weekDaysRow.add(createButton("–í—Å"));
        keyboard.add(weekDaysRow);

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –≤ –º–µ—Å—è—Ü–µ –∏ –ø–µ—Ä–≤—ã–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏
        LocalDate firstDayOfMonth = LocalDate.of(year, month, 1);
        int daysInMonth = firstDayOfMonth.lengthOfMonth();
        int firstDayOfWeek = firstDayOfMonth.getDayOfWeek().getValue(); // 1 = –ü–Ω, 7 = –í—Å

        // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –¥–Ω—è
        int currentDay = 1;

        // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–Ω–µ–π –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ
        for (int i = 0; i < 6; i++) {  // 6 —Å—Ç—Ä–æ–∫ - –º–∞–∫—Å–∏–º—É–º –¥–ª—è –º–µ—Å—è—Ü–∞
            List<InlineKeyboardButton> row = new ArrayList<>();

            for (int j = 1; j <= 7; j++) {
                if (i == 0 && j < firstDayOfWeek) {
                    // –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Å—Ç—ã–µ —è—á–µ–π–∫–∏ –≤ –Ω–∞—á–∞–ª–µ –º–µ—Å—è—Ü–∞
                    row.add(createButton(" "));
                } else if (currentDay <= daysInMonth) {
                    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Å –¥–Ω–µ–º –º–µ—Å—è—Ü–∞ –∏ —Å–º–∞–π–ª–∏–∫–æ–º (–º–µ–Ω—è–µ—Ç—Å—è –ø–æ –ø—Ä–∏–º–µ—Ä—É)
                    if (currentDay <= 5) {
                        row.add(createButton(currentDay + " üíß"));
                    } else if (currentDay <= 10) {
                        row.add(createButton(currentDay + " üíã"));
                    } else if (currentDay <= 20) {
                        row.add(createButton(currentDay + " üåû"));
                    } else {
                        row.add(createButton(currentDay + " üìÖ"));
                    }
                    currentDay++;
                } else {
                    // –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Å—Ç—ã–µ —è—á–µ–π–∫–∏ –≤ –∫–æ–Ω—Ü–µ –º–µ—Å—è—Ü–∞
                    row.add(createButton(" "));
                }
            }

            keyboard.add(row);
            if (currentDay > daysInMonth) {
                break;  // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º, –µ—Å–ª–∏ –≤—Å–µ –¥–Ω–∏ –º–µ—Å—è—Ü–∞ –¥–æ–±–∞–≤–ª–µ–Ω—ã
            }
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ "–Ω–∞–∑–∞–¥" –∏ "–≤–ø–µ—Ä–µ–¥" –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–µ—Å—è—Ü–∞
        List<InlineKeyboardButton> navigationRow = new ArrayList<>();
        navigationRow.add(createNavigationButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", year, month - 1));
        navigationRow.add(createNavigationButton("–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è", year, month + 1));
        keyboard.add(navigationRow);

        inlineKeyboardMarkup.setKeyboard(keyboard);
        return inlineKeyboardMarkup;
    }

    private InlineKeyboardButton createButton(String text) {
        InlineKeyboardButton button = new InlineKeyboardButton();
        button.setText(text);
        button.setCallbackData(text); // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª–∏–∫–æ–≤
        return button;
    }

    private InlineKeyboardButton createNavigationButton(String text, int year, int month) {
        // –£—á–∏—Ç—ã–≤–∞–µ–º –ø–µ—Ä–µ—Ö–æ–¥—ã –º–µ–∂–¥—É –≥–æ–¥–∞–º–∏
        if (month < 1) {
            month = 12;
            year -= 1;
        } else if (month > 12) {
            month = 1;
            year += 1;
        }

        InlineKeyboardButton button = new InlineKeyboardButton();
        button.setText(text);
        // –ü–µ—Ä–µ–¥–∞—ë–º –≤ callbackData —Ç–µ–∫—É—â–∏–π –≥–æ–¥ –∏ –º–µ—Å—è—Ü, —á—Ç–æ–±—ã –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –±–æ—Ç –∑–Ω–∞–ª, —á—Ç–æ –æ–±–Ω–æ–≤–ª—è—Ç—å
        button.setCallbackData("navigate:" + year + ":" + month);
        return button;
    }

    public InlineKeyboardMarkup handleNavigation(String callbackData) {
        // –ü—Ä–∏–º–µ—Ä –æ–±—Ä–∞–±–æ—Ç–∫–∏ callbackData, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ "navigate:2024:10"
        String[] data = callbackData.split(":");
        int year = Integer.parseInt(data[1]);
        int month = Integer.parseInt(data[2]);

        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ –º–µ—Å—è—Ü–∞ –∏ –≥–æ–¥–∞
        return getCalendar(year, month);
    }
}